qqnorm(coh_all_measures$av_switch)
boxplot(av_switch~diagnosis, coh_all_measures)
cor.test(coh_all_measures$av_comment,
coh_all_measures$av_meta_comment, method = 'spearman') #TIES AAA
shapiro.test(coh_all_measures$av_comment) # normal, p-value = 0.1876
hist(coh_all_measures$av_comment)
qqnorm(coh_all_measures$av_comment)
boxplot(av_comment~diagnosis, coh_all_measures)
t.test(av_comment~diagnosis, coh_all_measures)
shapiro.test(coh_all_measures$compl_viol_per_utt_reverse) # not normal, p-value = 0.002367
hist(coh_all_measures$compl_viol_per_utt_reverse)
qqnorm(coh_all_measures$compl_viol_per_utt_reverse)
boxplot(compl_viol_per_utt_reverse~diagnosis, coh_all_measures)
wilcox.test(compl_viol_per_utt_reverse~diagnosis, coh_all_measures) #ties
boxplot(av_lcoh4_1~diagnosis, coh_all_measures)
boxplot(av_lcoh1~diagnosis, coh_all_measures)
boxplot(av_lcoh_1~diagnosis, coh_all_measures)
boxplot(comp_compl_viol_per_utt~diagnosis, coh_all_measures)
coh_all_measures %>%
mutate(diagnosis = ifelse(diagnosis == 1, 'shizo', 'control')) %>%
select(diagnosis) -> coh_all_measures
coh_all_measures %>%
mutate(diagnosis = ifelse(diagnosis == 1, 'shizo', 'control'))  -> coh_all_measures
no_nutt_no_diagnosis <- coh_all_measures[4:19]
coh_all_measures <- read_csv('all_measures.csv')
coh_all_measures %>%
mutate(diagnosis = ifelse(diagnosis == 1, 'shizo', 'control'))  -> coh_all_measures
boxplot(comp_compl_viol_per_utt~diagnosis, coh_all_measures)
boxplot(comp_av_loc_coh~diagnosis, coh_all_measures)
wilcox.test(comp_av_loc_coh~diagnosis, coh_all_measures)
boxplot(comp_av_cum_semi_loc_coh~diagnosis, coh_all_measures)
boxplot(comp_last_cum_semi_loc_coh~diagnosis, coh_all_measures)
wilcox.test(comp_av_loc_coh~diagnosis, coh_all_measures)
boxplot(comp_control_glob_coh~diagnosis, coh_all_measures)
boxplot(comp_glob_coh~diagnosis, coh_all_measures)
boxplot(av_comment~diagnosis, coh_all_measures)
title('average comment number per utterance score')
boxplot(compl_viol_per_utt_reverse~diagnosis, coh_all_measures)
title('reversed completeness violation per utterance score')
coh_all_measures %>%
ggplot(aes(compl_viol_per_utt_reverse, comp_compl_viol_per_utt))+
geom_point()
coh_all_measures %>%
ggplot(aes(compl_viol_per_utt_reverse, comp_compl_viol_per_utt))+
geom_point()+
geom(line)
coh_all_measures %>%
ggplot(aes(compl_viol_per_utt_reverse, comp_compl_viol_per_utt))+
geom_point()+
geom_line())
coh_all_measures %>%
ggplot(aes(compl_viol_per_utt_reverse, comp_compl_viol_per_utt))+
geom_point()+
geom_line()
coh_all_measures %>%
ggplot(aes(compl_viol_per_utt_reverse, comp_compl_viol_per_utt, color = diagnosis))+
geom_point()+
geom_smooth(nethod='lm', lintype = 'dashed')
coh_all_measures %>%
ggplot(aes(compl_viol_per_utt_reverse, comp_compl_viol_per_utt, color = diagnosis))+
geom_point()+
geom_smooth(method='lm', lintype = 'dashed')
coh_all_measures %>%
ggplot(aes(compl_viol_per_utt_reverse, comp_compl_viol_per_utt, color = diagnosis))+
geom_point()+
geom_smooth(method='lm', linetype = 'dashed')
coh_all_measures %>%
ggplot(aes(compl_viol_per_utt_reverse, comp_compl_viol_per_utt))+
geom_point(color = diagnosis)+
geom_smooth(method='lm', linetype = 'dashed')
coh_all_measures %>%
ggplot(aes(compl_viol_per_utt_reverse, comp_compl_viol_per_utt))+
geom_point(aes(color = diagnosis))+
geom_smooth(method='lm', linetype = 'dashed')
coh_all_measures %>%
ggplot(aes(compl_viol_per_utt_reverse, comp_compl_viol_per_utt))+
geom_point(aes(color = diagnosis))+
geom_smooth(method='lm', linetype = 'dashed', color = 'grey')
coh_all_measures %>%
ggplot(aes(compl_viol_per_utt_reverse, comp_compl_viol_per_utt))+
geom_point(aes(color = diagnosis))+
geom_smooth(method='lm', linetype = 'dashed', color = 'grey', fill = 'white')
coh_all_measures %>%
ggplot(aes(compl_viol_per_utt_reverse, comp_compl_viol_per_utt))+
geom_smooth(method='lm', linetype = 'dashed', color = 'grey', fill = 'white')+
geom_point(aes(color = diagnosis))
coh_all_measures %>%
ggplot(aes(compl_viol_per_utt_reverse, comp_compl_viol_per_utt))+
geom_smooth(method='lm', linetype = 'dashed', color = 'grey', fill = 'white')+
geom_point(aes(color = diagnosis))+
geom_label(aes(label = ID))
?geom_label
coh_all_measures %>%
ggplot(aes(compl_viol_per_utt_reverse, comp_compl_viol_per_utt))+
geom_smooth(method='lm', linetype = 'dashed', color = 'grey', fill = 'lightgrey')+
geom_label(aes(label = ID, color = diagnosis))+
geom_point(aes(color = diagnosis))
coh_all_measures %>%
ggplot(aes(compl_viol_per_utt_reverse, comp_compl_viol_per_utt))+
geom_smooth(method='lm', linetype = 'dashed', color = 'grey', fill = 'lightgrey')+
geom_text(aes(label = ID, color = diagnosis))+
geom_point(aes(color = diagnosis))
coh_all_measures %>%
ggplot(aes(compl_viol_per_utt_reverse, comp_compl_viol_per_utt))+
geom_smooth(method='lm', linetype = 'dashed', color = 'grey', fill = 'lightgrey')+
geom_text(aes(label = ID, color = diagnosis), check_overlap = TRUE)+
geom_point(aes(color = diagnosis))
coh_all_measures %>%
ggplot(aes(compl_viol_per_utt_reverse, comp_compl_viol_per_utt))+
geom_smooth(method='lm', linetype = 'dashed', color = 'darkgrey', se = FALSE)+
geom_text(aes(label = ID, color = diagnosis), check_overlap = TRUE)+
geom_point(aes(color = diagnosis))
coh_all_measures %>%
ggplot(aes(compl_viol_per_utt_reverse, comp_compl_viol_per_utt))+
geom_smooth(method='lm', linetype = 'dashed', color = 'darkgrey', se = FALSE)+
geom_text(aes(label = ID, color = diagnosis), check_overlap = TRUE, position = "dodge")+
geom_point(aes(color = diagnosis))
coh_all_measures %>%
ggplot(aes(compl_viol_per_utt_reverse, comp_compl_viol_per_utt))+
geom_smooth(method='lm', linetype = 'dashed', color = 'darkgrey', se = FALSE)+
geom_text(aes(label = ID, color = diagnosis), check_overlap = TRUE, position = 'right')+
geom_point(aes(color = diagnosis))
coh_all_measures %>%
ggplot(aes(compl_viol_per_utt_reverse, comp_compl_viol_per_utt))+
geom_smooth(method='lm', linetype = 'dashed', color = 'darkgrey', se = FALSE)+
geom_text(aes(label = ID, color = diagnosis), check_overlap = TRUE, position = 'r')+
geom_point(aes(color = diagnosis))
?geom_text
coh_all_measures %>%
ggplot(aes(compl_viol_per_utt_reverse, comp_compl_viol_per_utt))+
geom_smooth(method='lm', linetype = 'dashed', color = 'darkgrey', se = FALSE)+
geom_text(aes(label = ID, color = diagnosis), check_overlap = TRUE, nudge_x = 0.1)+
geom_point(aes(color = diagnosis))
coh_all_measures %>%
ggplot(aes(compl_viol_per_utt_reverse, comp_compl_viol_per_utt))+
geom_smooth(method='lm', linetype = 'dashed', color = 'darkgrey', se = FALSE)+
geom_text(aes(label = ID, color = diagnosis), check_overlap = TRUE, nudge_y = 0.01)+
geom_point(aes(color = diagnosis))
coh_all_measures %>%
ggplot(aes(compl_viol_per_utt_reverse, comp_compl_viol_per_utt))+
geom_smooth(method='lm', linetype = 'dashed', color = 'darkgrey', se = FALSE)+
geom_text(aes(label = ID, color = diagnosis), check_overlap = TRUE, nudge_y = 0.001)+
geom_point(aes(color = diagnosis))
coh_all_measures %>%
ggplot(aes(compl_viol_per_utt_reverse, comp_compl_viol_per_utt))+
geom_smooth(method='lm', linetype = 'dashed', color = 'darkgrey', se = FALSE)+
geom_text(aes(label = ID, color = diagnosis), check_overlap = TRUE, nudge_y = 0.003)+
geom_point(aes(color = diagnosis))
coh_all_measures %>%
ggplot(aes(compl_viol_per_utt_reverse, comp_compl_viol_per_utt, label = ID))+
geom_smooth(method='lm', linetype = 'dashed', color = 'darkgrey', se = FALSE)+
geom_text(aes(color = diagnosis), check_overlap = TRUE, nudge_y = 0.003)+
geom_point(aes(color = diagnosis))
coh_all_measures %>%
ggplot(aes(compl_viol_per_utt_reverse, comp_compl_viol_per_utt, label = ID))+
geom_smooth(method='lm', linetype = 'dashed', color = 'darkgrey', se = FALSE)+
geom_text(aes(color = diagnosis), nudge_y = 0.003)+
geom_point(aes(color = diagnosis))
coh_all_measures %>%
ggplot(aes(compl_viol_per_utt_reverse, comp_compl_viol_per_utt, label = ID))+
geom_smooth(method='lm', linetype = 'dashed', color = 'darkgrey', se = FALSE)+
geom_text(aes(color = diagnosis), nudge_y = 0.003, lineheight = 0.1)+
geom_point(aes(color = diagnosis))
coh_all_measures %>%
ggplot(aes(compl_viol_per_utt_reverse, comp_compl_viol_per_utt, label = ID))+
geom_smooth(method='lm', linetype = 'dashed', color = 'darkgrey', se = FALSE)+
geom_text(aes(color = diagnosis), nudge_y = 0.003, lineheight = 0.5)+
geom_point(aes(color = diagnosis))
install.packages(''ggrepel)
install.packages('ggrepel)
install.packages('ggrepel')
install.packages('ggrepel')
install.packages('ggrepel')
install.packages('ggrepel')
install.packages("ggrepel")
coh_all_measures <- read_csv('all_measures.csv')
coh_all_measures %>%
mutate(diagnosis = ifelse(diagnosis == 1, 'shizo', 'control')) -> coh_all_measures
library(tidyverse)
library(ggrepel)
coh_all_measures <- read_csv('all_measures.csv')
no_nutt_no_diagnosis <- coh_all_measures[4:19]
row.names(no_nutt_no_diagnosis) <- coh_all_measures[[1]]
coh_all_measures %>%
mutate(diagnosis = ifelse(diagnosis == 1, 'shizo', 'control')) -> coh_all_measures
coh_all_measures %>%
ggplot(aes(compl_viol_per_utt_reverse, comp_compl_viol_per_utt, label = ID))+
geom_smooth(method='lm', linetype = 'dashed', color = 'darkgrey', se = FALSE)+
geom_text_repel(aes(color = diagnosis))+
geom_point(aes(color = diagnosis))
coh_all_measures %>%
ggplot(aes(compl_viol_per_utt_reverse, comp_compl_viol_per_utt, label = ID))+
geom_smooth(method='lm', linetype = 'dashed', color = 'darkgrey', se = FALSE)+
geom_text_repel(aes(color = diagnosis), force = 2)+
geom_point(aes(color = diagnosis))
coh_all_measures %>%
ggplot(aes(compl_viol_per_utt_reverse, comp_compl_viol_per_utt, label = ID))+
geom_smooth(method='lm', linetype = 'dashed', color = 'darkgrey', se = FALSE)+
geom_text_repel(aes(color = diagnosis))+
geom_point(aes(color = diagnosis))+
ggtitle('Correlation between manual and computational measure of violations of completeness')
coh_all_measures %>%
ggplot(aes(compl_viol_per_utt_reverse, comp_compl_viol_per_utt, label = ID))+
geom_smooth(method='lm', linetype = 'dashed', color = 'darkgrey', se = FALSE)+
geom_text_repel(aes(color = diagnosis))+
geom_point(aes(color = diagnosis))+
ggtitle('Correlation between manual and computational measure of violations of completeness')+
labs(xlab = 'reversed manual metric of violations of completeness per utterance')
coh_all_measures %>%
ggplot(aes(compl_viol_per_utt_reverse, comp_compl_viol_per_utt, label = ID))+
geom_smooth(method='lm', linetype = 'dashed', color = 'darkgrey', se = FALSE)+
geom_text_repel(aes(color = diagnosis))+
geom_point(aes(color = diagnosis))+
ggtitle('Correlation between manual and computational measure of violations of completeness')+
labs(x = 'reversed manual metric of violations of completeness per utterance')
coh_all_measures %>%
ggplot(aes(compl_viol_per_utt_reverse, comp_compl_viol_per_utt, label = ID))+
geom_smooth(method='lm', linetype = 'dashed', color = 'darkgrey', se = FALSE)+
geom_text_repel(aes(color = diagnosis))+
geom_point(aes(color = diagnosis))+
ggtitle('Correlation between manual and computational measure of violations of completeness')+
labs(x = 'reversed manual metric of violations of completeness per utterance',
y = 'computational metric of violations of completeness per utterance')
coh_all_measures %>%
ggplot(aes(compl_viol_per_utt_reverse, comp_compl_viol_per_utt, label = ID))+
geom_smooth(method='lm', linetype = 'dashed', color = 'darkgrey', se = FALSE, label = 'linear approximation')+
geom_text_repel(aes(color = diagnosis))+
geom_point(aes(color = diagnosis))+
ggtitle('Correlation between manual and computational measure of violations of completeness')+
labs(x = 'reversed manual metric of violations of completeness per utterance',
y = 'computational metric of violations of completeness per utterance')
cor.test(coh_all_measures$av_gcoh_1, coh_all_measures$comp_control_glob_coh, method = 'spearman')
### my lcoh vs comp_lcoh
cor.test(coh_all_measures$av_lcoh4_1, coh_all_measures$comp_av_loc_coh, method = 'spearman')
cor.test(coh_all_measures$compl_viol_per_utt_reverse, coh_all_measures$num_utt)
cor.test(coh_all_measures$compl_viol_per_utt_reverse, coh_all_measures$num_utt)
cor.test(coh_all_measures$compl_viol_per_utt_reverse, coh_all_measures$num_utt)$p-value
cor.test(coh_all_measures$compl_viol_per_utt_reverse, coh_all_measures$num_utt)$p
c <- cor.test(coh_all_measures$compl_viol_per_utt_reverse, coh_all_measures$num_utt)
View(c)
return(c(c$p.value, c$estimate))}
c <- cor.test(coh_all_measures$metric, coh_all_measures$num_utt, method = 'spearman');
c <- cor.test(coh_all_measures[metric], coh_all_measures$num_utt, method = 'spearman')
cor_nutt <- function(metric){
c <- cor.test(coh_all_measures[metric], coh_all_measures$num_utt, method = 'spearman')
return(c(c$p.value, c$estimate))}
cor_nutt('av_lcoh')
cor_nutt('lcoh')
cor_nutt('av_lcoh_1')
c <- cor.test(coh_all_measures[metric], coh_all_measures['num_utt'], method = 'spearman')
return(c(c$p.value, c$estimate))}
return(c(c$p.value, c$estimate))}
c <- cor.test(coh_all_measures[metric], coh_all_measures['num_utt'], method = 'spearman');
return(c(c$p.value, c$estimate))}
cor_nutt <- function(metric){
c <- cor.test(coh_all_measures[metric], coh_all_measures['num_utt'], method = 'spearman');
return(c(c$p.value, c$estimate))}
cor_nutt('av_lcoh_1')
coh_all_measures['av_lcoh_1']
as.vector(coh_all_measures['av_lcoh_1'])
as.vector(coh_all_measures['av_lcoh_1']) == coh_all_measures['av_lcoh_1']
as.numeric(coh_all_measures['av_lcoh_1'])
for (el in coh_all_measures['av_lcoh_1']) {as.numeric(el)}
for (column in coh_all_measures) {print(column)}
c <- cor(column, coh_all_measures$num_utt)
print(c$p.value, c$estimate)
for (column in coh_all_measures) {
c <- cor(column, coh_all_measures$num_utt)
print(c$p.value, c$estimate)
}
coh_all_measures %>%
mutate(num_utt = as.numeric(num_utt))
coh_all_measures %>%
mutate(num_utt = as.numeric(num_utt)) -> coh_all_measures
for (column in coh_all_measures) {
c <- cor(column, coh_all_measures$num_utt)
print(c$p.value, c$estimate)
}
print(column)
for (column in columns(coh_all_measures)) {
print(column)
c <- cor(column, coh_all_measures$num_utt)
print(c$p.value, c$estimate)
}
for (column in colnames(coh_all_measures)) {
print(column)
c <- cor(column, coh_all_measures$num_utt)
print(c$p.value, c$estimate)
}
c <- cor(coh_all_measures[column], coh_all_measures['num_utt'])
for (column in colnames(coh_all_measures)[3:]) {
c <- cor(coh_all_measures[column], coh_all_measures['num_utt'])
print(c$p.value, c$estimate)
}
for (column in colnames(coh_all_measures)[3:]) {
c <- cor(coh_all_measures[column], coh_all_measures['num_utt'])
print(c$p.value, c$estimate)
}
for (column in colnames(coh_all_measures)[3:]) {
c <- cor(coh_all_measures[column], coh_all_measures['num_utt'])
print(c$p.value, c$estimate)}
for (column in colnames(coh_all_measures)[3:]){
c <- cor(coh_all_measures[column], coh_all_measures['num_utt'])
print(c$p.value, c$estimate)}
for (column in colnames(coh_all_measures)[3:19]){
c <- cor(coh_all_measures[column], coh_all_measures['num_utt'])
print(c$p.value, c$estimate)}
for (column in colnames(coh_all_measures)[3:19]){
c <- cor(coh_all_measures[column], coh_all_measures['num_utt'])
print(c$p.value, c$estimate)}
print(c)}
coh_all_measures %>%
mutate(num_utt = as.numeric(num_utt)) -> coh_all_measures
for (column in colnames(coh_all_measures)[3:19]){
c <- cor(coh_all_measures[column], coh_all_measures['num_utt'])
print(c)}
c <- cor(coh_all_measures[column], coh_all_measures['num_utt'])[0]
coh_all_measures %>%
mutate(num_utt = as.numeric(num_utt)) -> coh_all_measures
for (column in colnames(coh_all_measures)[3:19]){
c <- cor(coh_all_measures[column], coh_all_measures['num_utt'])[0]
print(c)}
for (column in colnames(coh_all_measures)[3:19]){
c <- cor(coh_all_measures[column], coh_all_measures['num_utt'])[0]
print(c)}
for (column in colnames(coh_all_measures)[3:19]){
c <- cor(coh_all_measures[column], coh_all_measures['num_utt'])
print(c)}
for (column in colnames(coh_all_measures)[3:19]){
c <- cor.test(coh_all_measures[column], coh_all_measures['num_utt'])
print(c$p.value, c$estimate)}
for (column in colnames(coh_all_measures)[3:19]){
c <- cor.test(coh_all_measures[column], coh_all_measures['num_utt'])
print(c$p.value, c$estimate)}
for (column in colnames(coh_all_measures)[10:19]){
c <- cor.test(coh_all_measures[column], coh_all_measures['num_utt'])
print(c$p.value, c$estimate)}
for (column in colnames(coh_all_measures)[19]){
c <- cor.test(coh_all_measures[column], coh_all_measures['num_utt'])
print(c$p.value, c$estimate)}
print(c)}
for (column in colnames(coh_all_measures)[3:19]){
c <- cor(coh_all_measures[column], coh_all_measures['num_utt'])
print(c)}
cor(coh_all_measures[2:19])
coh_all_measures[3:19]
cor(coh_all_measures[3:19])
install.packages("Hmisc")
library(Hmisc)
rcorr(as.matrix(coh_all_measures[3:19]))
as.tibble(rcorr(as.matrix(coh_all_measures[3:19])))
rcorr(as.matrix(coh_all_measures[3:19]))$r
install.packages("PerformanceAnalytics")
library(PerformanceAnalytics)
coh_all_measures %>%
mutate(num_utt = as.numeric(num_utt)) -> coh_all_measures
chart.Correlation(as.matrix(coh_all_measures[3:19]), histogram=TRUE, pch=19)
chart.Correlation(as.matrix(coh_all_measures[3:19]), histogram=TRUE, pch=19, method = 'spearman')
chart.Correlation(as.matrix(coh_all_measures[3:19]), pch=19, method = 'spearman')
chart.Correlation(as.matrix(coh_all_measures[3:19]), pch=19, method = 'spearman')
chart.Correlation(as.matrix(coh_all_measures[3:19]), pch=10, method = 'spearman')
chart.Correlation(as.matrix(coh_all_measures[3:19]), pch=20, method = 'spearman')
chart.Correlation(coh_all_measures[3:19], pch=20, method = 'spearman')
install.packages(corrplot)
install.packages('corrplot')
library(corrplot)
chart.Correlation(coh_all_measures[3:19], pch=20, method = 'spearman', histogram = FALSE)
chart.Correlation(coh_all_measures[3:19], pch=10, method = 'spearman', histogram = FALSE)
library(corrplot)
# Insignificant correlation are left blank
res2<-rcorr(as.matrix(mtcars[,1:7])
# Insignificant correlation are left blank
res2 <- rcorr(as.matrix(coh_all_measures[3:19]))
# Insignificant correlation are left blank
res2 <- rcorr(as.matrix(coh_all_measures[3:19]))
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank")
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank",
tl.col = "black", tl.srt = 45)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank",
tl.col = "black")
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank",
tl.col = "black", tl.cex = 1)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank",
tl.col = "black", tl.cex = 10)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank",
tl.col = "black", tl.cex = 0.5)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank",
tl.col = "black", tl.cex = 1.5)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank",
tl.col = "black", tl.cex = 0.75)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank",
tl.col = "black", tl.cex = 0.75, method="number")
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank",
tl.col = "black", tl.cex = 0.75, method="number", title = 'correlation matrix')
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank",
tl.col = "black", tl.cex = 0.75, method="number", cl.cex = 0.75,
title = 'correlation matrix')
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank",
tl.col = "black", tl.cex = 0.75, method="number", cl.cex = 0.5,
title = 'correlation matrix')
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank",
tl.col = "black", tl.cex = 0.75, method="number", number.cex = 0.5,
title = 'correlation matrix')
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank",
tl.col = "black", tl.cex = 0.75, method="number", number.cex = 0.75,
title = 'correlation matrix')
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank",
tl.col = "black", tl.cex = 0.75, method="number", number.cex = 0.5,
title = 'correlation matrix')
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank",
tl.col = "black", tl.cex = 0.75, method="number", number.cex = 0.65,
title = 'correlation matrix')
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank",
tl.col = "black", tl.cex = 0.75, method="number", number.cex = 0.65)
title('correlztion matrix')
title('correletion matrix')
title('correletion matrix', line = -2)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank",
tl.col = "black", tl.cex = 0.75, method="number", number.cex = 0.65)
title('correletion matrix', line = -2)
title('correletion matrix', adj = 0.5)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank",
tl.col = "black", tl.cex = 0.75, method="number", number.cex = 0.65)
title('correletion matrix', adj = 0.5)
title('correletion matrix', adj = 0.5, line = 1)
title('correletion matrix', adj = 0, line = 1)
title('correlation matrix', adj = 0, line = 1)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank",
tl.col = "black", tl.cex = 0.75, method="number", number.cex = 0.65)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank",
tl.col = "black", tl.cex = 0.75, method="number", number.cex = 0.65)
title('correlation matrix', adj = 0, line = 0)
title('correlation matrix', adj = 0, line = -0.5)
title('correlation matrix', adj = 0, line = -0.75)
title('correlation matrix', adj = 0, line = -0.1)
title('correlation matrix', adj = 0, line = -1)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank",
tl.col = "black", tl.cex = 0.75, method="number", number.cex = 0.65)
title('correlation matrix', adj = 0, line = -1)
title('correlation matrix', adj = 0.1, line = -1)
title('correlation matrix', adj = 0.05, line = -1)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank",
tl.col = "black", tl.cex = 0.75, method="number", number.cex = 0.65)
title('correlation matrix', adj = 0.05, line = -1.1)
title('correlation matrix', adj = 0.05, line = -1.5)
title('correlation matrix', adj = 0.05, line = -2)
title('correlation matrix', adj = 0.05, line = -2.5)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank",
tl.col = "black", tl.cex = 0.75, method="number", number.cex = 0.65)
title('correlation matrix', adj = 0.05, line = -2.75)
title('correlation matrix', adj = 3, line = -7)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank",
tl.col = "black", tl.cex = 0.75, method="number", number.cex = 0.65)
title('correlation matrix', adj = 3, line = -7)
title('correlation matrix', adj = 0.3, line = -7)
title('correlation matrix', adj = 0.1, line = -7)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank",
tl.col = "black", tl.cex = 0.75, method="number", number.cex = 0.65)
title('correlation matrix', adj = 0.1, line = -7)
title('correlation matrix', adj = 0.5, line = -7)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank",
tl.col = "black", tl.cex = 0.75, method="number", number.cex = 0.65)
title('correlation matrix', adj = 0.5, line = -7)
title('correlation matrix', adj = 0.3, line = -7.3)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank",
tl.col = "black", tl.cex = 0.75, method="number", number.cex = 0.65)
title('correlation matrix', adj = 0.3, line = -8)
title('correlation matrix', adj = 0.3, line = -12)
title('correlation matrix', adj = 0.35, line = -12)
# Insignificant correlation are left blank
res2 <- rcorr(as.matrix(coh_all_measures[3:19]))
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank",
tl.col = "black", tl.cex = 0.75, method="number", number.cex = 0.65)
title('correlation matrix', adj = 0.35, line = -12)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank",
tl.col = "black", tl.cex = 0.75, method="number", number.cex = 0.65)
title('correlation matrix', adj = 0.325, line = -12)
corrplot(res2$r, type="upper", order="hclust",
p.mat = res2$P, sig.level = 0.01, insig = "blank",
tl.col = "black", tl.cex = 0.75, method="number", number.cex = 0.65)
title('correlation matrix', adj = 0.325, line = -12)
title('correlation matrix')
